// 


#include "PlayerDodgeInvulnerabilityEffect.h"

#include "HonkDuckAges/Player/HDAPlayerCharacter.h"
#include "HonkDuckAges/Shared/Components/HDALifeStateComponent.h"


UPlayerDodgeInvulnerabilityEffect::UPlayerDodgeInvulnerabilityEffect()
{
	EffectScope = EStatusEffectScope::PerTarget;
	bIsInfinite = true;
	bIsStackable = false;
	EffectType = EStatusEffectType::Buff;
}

bool UPlayerDodgeInvulnerabilityEffect::CanBeActivated_Implementation()
{
	const AHDAPlayerCharacter* PlayerCharacter = Cast<AHDAPlayerCharacter>(GetTargetActor());
	DamageManagerComponent = GetTargetActor()->GetComponentByClass<UHDALifeStateComponent>();
	return IsValid(PlayerCharacter) && DamageManagerComponent.IsValid();
}

void UPlayerDodgeInvulnerabilityEffect::ActivateEffect_Implementation()
{
	DamageManagerComponent->SetIsInvulnerable(true);
}

void UPlayerDodgeInvulnerabilityEffect::DeactivateEffect_Implementation(AActor* Deactivator)
{
	DamageManagerComponent->SetIsInvulnerable(false);
}
